EXE := ./te
CPP := g++
SRCDIR := ./Source
SRC := $(wildcard $(SRCDIR)/*.cpp)
OBJDIR := ./Build
OBJ := $(addprefix $(OBJDIR)/,$(notdir $(SRC:.cpp=.o)))
DEP := $(OBJDIR)/depend.d
DEPSRC := $(wildcard $(SRCDIR)/*.cpp) $(wildcard $(SRCDIR)/*.h) $(wildcard $(SRCDIR)/*.hpp)
LANG = -std=c++14
CFLAGS := -c -O3 -W -Wall -Werror -Wno-deprecated-declarations
IFLAGS := -isystem /usr/local/include -I ~/miniconda3/include
LFLAGS := -llua -L /usr/local/lib -L ~/miniconda3/lib

ifeq ($(DEBUG),1)
 CFLAGS := $(filter-out -s -fomit-frame-pointer -O3, $(CFLAGS)) -fno-omit-frame-pointer -fsanitize=address -fsanitize=undefined -ggdb -DDEBUG
 LFLAGS := $(LFLAGS) -fno-omit-frame-pointer -fsanitize=address -fsanitize=undefined -ggdb
endif

ifeq ($(PROFILE),1)
 CFLAGS := $(filter-out -s -fomit-frame-pointer, $(CFLAGS)) -pg
 LFLAGS := $(LFLAGS) -pg
endif

ifeq ($(NO_OPT),1)
 CFLAGS := $(filter-out -O3, $(CFLAGS))
endif

.PHONY: clean veryclean

default: $(DEP) $(OBJ) $(EXE)

$(DEP): $(DEPSRC)
	g++ -MM $(LANG) $(IFLAGS) $(SRC) > $(DEP).x
	sed -e "s/\([a-zA-Z0-9_]*\.o:\)/$(subst /,\/,$(OBJDIR)/)\1/" $(DEP).x > $(DEP)

-include $(DEP)

$(OBJDIR)/%.o: $(SRCDIR)/%.cpp
	$(CPP) -o $@ $(CFLAGS) $(LANG) $(IFLAGS) $<

ifeq ($(DEBUG),1)
$(EXE): $(OBJ)
	$(CPP) -o $(EXE) $(OBJ) $(LFLAGS)
else
$(EXE): $(OBJ)
	$(CPP) -o $(EXE) $(OBJ) $(LFLAGS)
	$(EXE) -check
endif

clean:
	$(RM) $(OBJ) $(DEP) $(DEP).x

veryclean: clean
	$(RM) $(EXE)

